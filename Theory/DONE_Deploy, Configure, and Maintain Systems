
Scheduling jobs with cron --------------------------------------

cat /etc/crontab 
  can use  ',' this it will run multiple times like 15min and 45minutes -> 15,45
  can use '-', set hours to 2-4 2am,3am,4am
  can use '/', to specifies steps, every 4hours it will run
  
crontab -e 
  edit he table of youyr current user
  
crontab -l   - to see user logged in cronjobs

to edit as sudo just add usdo at the front
sudo crontab -l   
sudo crontab -e

to add with different user
sudo crontab -e -u <username>

to remove cronjob
crontab -r
sudo crontab -r -u <username>

to run a sheel script in a cronjob dont add extension
makes executable
sudo chmod +rx /etc/cron.hourly/shellscript
if want run hourly (/etc/cron.hourly) just move to this dir, using sudo 


check the logs
sudo cat /var/log/cron

to send an email to user change the MAILTO=root


Scheduling jobs with anacron ------------------------------
using anacron we dont care the time the job is going to run, just want to run daily, hourly,...

to add a job need to edit the file
sudo vim /etc/anacrontab

can use anacron -T  to test the job

sudo vim /etc/anacrontab

to run the jobs right now
sudo anacron -n

check the logs
sudo grep anacron /var/log/cron


Scheduling jobs with at ------------------------------
just specify the time

at 15:00
at> /usr/bin/touch  file
ctrl +d to save the job

at 'December 01 2020'
at '1:30 December 01 2020'
at 'now + 30 minutes'     in 30 minutes from now

atq   to see the jobs
at -c <job_id>    to see what the jobs does

atrm <job_id>     to remove the job


Manage the startup process and services =============================================================================

units - services, socket, device, timer
units tells the init system all it needs to know about how it should manage the entire life cycle of certain app

man systemd.service

systemctl cat sshd.service
execstart
execreload
those command tells the init which command should run

sudo systemctl edit --full sshd.service

when change the config use 
sudo systemctl restart sshd.service
but if a user is using that service may interrupt their work temporarily, better way is to use (not all servicxe can use reload)
sudo systemctl reload sshd.service
sudo systemctl reload-or-restart sshd.service

sometimes services start even there are disabled and stopped
to force brute stop
sudo systemctl mask atd.service    when you mask a service when you enable it wont work, need unmask
sudo systemctl unmask atd.service

to list services available on the system
sudo systemctl list-units --type service --all


Install and update software packages from Red Hat Network, a remote repository, or from the local file system=========================================

package manager - dnf, yum

list of which repo are currently enabled on the server/host
sudo yum repolist
sudo yum repolist -v    get a list of online repo, that your system is currently using 

sometimes the default repo dont include what we are looking for 
to list the optionals repo
sudo yum repolist --all
sudo subscription-manager repos --enable <repo.rpms>
sudo yum-config-manager --enable <repo.rpms>

if we dont fid the repo we want and want add other repo
use the yum conf manager
first install this utilities
sudo yum install yum-utils    this contains yum manager
sudo yum-config-manager --add-repo <website.repo>       add the repo online
sudo yum-config-manager --add-repo <IP/Repo.repo>       add the repo local
    with that will create /etc/yum.repos.d/<repo>.repo


sudo viu /etc/yum.repos.d/<repo>.repo
[base]    ->name of the repo
name=CentOS-$releasever - Base      -> long name for the repo
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os&infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/      ->tells where the repo is located, can be local or  in the internet
enabled = 1         -> 1 means available for use 
gpgcheck=1          -> check the validity of the package using gpg keys
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7     ->where is the gpg located


yum can also used to install and uninstall individual packages from repo
for that we need to know the name of the package, if you dont know can use yum to look for it
ex.: sudo yum search web server
sudo yum search 'web server'

sudo yum info <package>

sudo yum install <package>

sudo yum reinstall <package>
 
sudo yum remove <package>

to install packages in a certain grop
sudo yum group list
sudo yum group list --hidden
sudo yum group install '<groupname>'

yum can install software from rpm packages
sudo wget https://package.rpm
sudo yum install <./package.rpm>
sudo yum remove <package_name>

sometimes packages pull in dependencies which are ohte components that they need to run correctly
when remove the package  some of those dependencies might be left behind
to make sure that remove automatically all dependencies after removed the package
sudo yum autoremove

update and upgrade packages
sudo yum check-upgrade  check which package needs an update
sudo yum update     to update all packages to the latest version
